<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.plj.dao.admin.sys.UserLoginIpDao" >
  <resultMap id="BaseResultMap" type="com.plj.domain.decorate.admin.sys.UserLoginIp" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
    <result column="login_count" property="loginCount" jdbcType="INTEGER" />
    <result column="logint_time" property="logintTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="field" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, login_ip, login_count, logint_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 'true' as QUERYID,
    <include refid="field" />
    from sys_user_login_ip_t
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.plj.domain.decorate.admin.sys.UserLoginIp" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sys_user_login_ip_t (id, user_id, login_ip, 
      login_count, logint_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{loginIp,jdbcType=VARCHAR}, 
      #{loginCount,jdbcType=INTEGER}, #{logintTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.plj.domain.decorate.admin.sys.UserLoginIp" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sys_user_login_ip_t
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="loginIp != null" >
        login_ip,
      </if>
      <if test="loginCount != null" >
        login_count,
      </if>
      <if test="logintTime != null" >
        logint_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="loginIp != null" >
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginCount != null" >
        #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="logintTime != null" >
        #{logintTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.plj.domain.decorate.admin.sys.UserLoginIp" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user_login_ip_t
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="loginIp != null" >
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginCount != null" >
        login_count = #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="logintTime != null" >
        logint_time = #{logintTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.plj.domain.decorate.admin.sys.UserLoginIp" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_user_login_ip_t
    set user_id = #{userId,jdbcType=BIGINT},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_count = #{loginCount,jdbcType=INTEGER},
      logint_time = #{logintTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>